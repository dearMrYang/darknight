[uwsgi]
# 项目目录
chdir=/root/python_pro/darknight/
# 启动uwsgi的用户名和用户组
uid=root
gid=root
# 指定项目的wsgi模块
module=darknight.wsgi:application
# 指定sock的文件路径
socket=/root/python_pro/darknight/script/uwsgi.sock
# 启用主进程
master=true
# 进程个数
workers=4
# 指定pid文件
pidfile=/root/python_pro/darknight/script/uwsgi.pid
# 自动移除unix Socket和pid文件当服务停止的时候
vacuum=true
# 序列化接受的内容，如果可能的话
thunder-lock=true
# 启用线程
enable-threads=true
# 设置自中断时间
harakiri=30
# 设置缓冲
post-buffering=1024
# 设置日志目录
darmonize=/root/python_pro/darknight/script/uwsgi.log


# 静态文件的配置，配合static_url使用，前面的static是static_url中的字段
# static-map = /static=/Users/wsl/App/dev/recovery/recovery/static
# 指定项目的wsgi模块
# module=recovery.wsgi
# 指定IP端口
# http=127.0.0.1:8888
# 在每个worker而不是master中加载应用
# lazy-apps=true
# 每个进程最大的请求数
# max-request = 1000
#设置在平滑的重启（直到接收到的请求处理完才重启）一个工作子进程中，等待这个工作结束的最长秒数。这个配置会使在平滑地重启工作子进程中，如果工作进程结束时间超过了8秒就会被强行结束（忽略之前已经接收到的请求而直接结束）
# reload-mercy = 8
